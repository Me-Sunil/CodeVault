package com.Projectile;

import com.Constants.GeoConstants;

public class Projectile_Calculation {

	public float get_range_ms(float initial_velocity, float launch_degree) {

		// R = (v*v)*Sin(2*ø)/g

		launch_degree = (float) ((float) launch_degree * Math.PI / 180);
		return (float) ((initial_velocity * initial_velocity) * Math.sin((2 * launch_degree))
				/ GeoConstants.gravity_ms);
	}

	public float get_max_height_ms(float initial_velocity, float launch_degree) {
		// H = (v*v)*pow(sin(ø),2)/2*g;
		launch_degree = (float) ((float) launch_degree * Math.PI / 180);
		return (float) (initial_velocity * initial_velocity * Math.pow(Math.sin(launch_degree), 2)
				/ (2 * GeoConstants.gravity_ms));
	}

	public float get_time_to_reach_max_height(float initial_velocity, float launch_degree) {
		// T = (v)*(sin(ø))/g;
		launch_degree = (float) ((float) launch_degree * Math.PI / 180);
		return (float) (initial_velocity * Math.sin(launch_degree) / GeoConstants.gravity_ms);
	}

	public float get_time_of_flight(float initial_velocity, float launch_degree) {
		// T = 2vsin(ø)/g
		return (float) 2 * get_time_to_reach_max_height(initial_velocity, launch_degree);
	}
}
